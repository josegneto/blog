{"version":3,"file":"component---src-templates-blog-index-js-8dd6bbdcf37bac6f0029.js","mappings":"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","sources":["webpack://blog/./src/assets/profile-pic.jpg","webpack://blog/./src/components/Bio.js","webpack://blog/./src/components/Panel.js","webpack://blog/./src/components/SEO.js","webpack://blog/./src/components/Footer.js","webpack://blog/./src/templates/blog-index.js","webpack://blog/./src/utils/helpers.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/profile-pic-e62b772c54c375f14ca38fe6dd232ee2.jpg\";","import React from 'react';\r\nimport profilePic from '../assets/profile-pic.jpg';\r\nimport { rhythm } from '../utils/typography';\r\nimport { FaFastForward } from 'react-icons/fa';\r\n\r\nclass Bio extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          marginBottom: rhythm(2),\r\n        }}\r\n      >\r\n        <img\r\n          src={profilePic}\r\n          alt={`José Neto`}\r\n          style={{\r\n            marginRight: rhythm(1 / 2),\r\n            marginBottom: 0,\r\n            width: rhythm(2),\r\n            height: rhythm(2),\r\n            borderRadius: '50%',\r\n          }}\r\n        />\r\n        <p style={{ maxWidth: 310 }}>\r\n          Personal blog by{' '}\r\n          <a href=\"https://josegneto.github.io\" style={{textDecoration : 'none'}}>José Neto</a>\r\n          <br></br>Electrical Engineer\r\n          <br></br>\r\n          <a\r\n            href=\"https://josegneto.github.io\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n\r\n          >\r\n            josegneto.github.io\r\n          </a>\r\n          \r\n          <p> Based on{' '}\r\n            {<a\r\n              href=\"https://overreacted.io\"\r\n              target=\"_blank\"\r\n            >\r\n              overreacted\r\n            </a>} by Dan Abramov</p>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Bio;\r\n","import React from 'react';\r\n\r\nfunction Panel({ children, style = {} }) {\r\n  return (\r\n    <p\r\n      style={{\r\n        fontSize: '0.9em',\r\n        border: '1px solid var(--hr)',\r\n        borderRadius: '0.75em',\r\n        padding: '0.75em',\r\n        background: 'var(--inlineCode-bg)',\r\n        wordBreak: 'keep-all',\r\n        ...style,\r\n      }}\r\n    >\r\n      {children}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Panel;\r\n","import React from 'react';\r\nimport Helmet from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\nimport { StaticQuery, graphql } from 'gatsby';\r\n\r\nconst query = graphql`\r\n  query GetSiteMetadata {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        author\r\n        description\r\n        siteUrl\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction SEO({ meta, image, title, description, slug, lang = 'en' }) {\r\n  return (\r\n    <StaticQuery\r\n      query={query}\r\n      render={data => {\r\n        const { siteMetadata } = data.site;\r\n        const metaDescription = description || siteMetadata.description;\r\n        const metaImage = image ? `${siteMetadata.siteUrl}/${image}` : null;\r\n        const url = `${siteMetadata.siteUrl}${slug}`;\r\n        return (\r\n          <Helmet\r\n            htmlAttributes={{ lang }}\r\n            {...(title\r\n              ? {\r\n                  titleTemplate: `%s — ${siteMetadata.title}`,\r\n                  title,\r\n                }\r\n              : {\r\n                  title: `${siteMetadata.title} — A blog by José Neto`,\r\n                })}\r\n            meta={[\r\n              {\r\n                name: 'description',\r\n                content: metaDescription,\r\n              },\r\n              {\r\n                property: 'og:url',\r\n                content: url,\r\n              },\r\n              {\r\n                property: 'og:title',\r\n                content: title || siteMetadata.title,\r\n              },\r\n              {\r\n                property: 'og:description',\r\n                content: metaDescription,\r\n              },\r\n            ]\r\n              .concat(\r\n                metaImage\r\n                  ? [\r\n                      {\r\n                        property: 'og:image',\r\n                        content: metaImage,\r\n                      },                    \r\n                    ]\r\n                  : []\r\n              )\r\n              .concat(meta)}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nSEO.defaultProps = {\r\n  meta: [],\r\n  title: '',\r\n  slug: '',\r\n};\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  image: PropTypes.string,\r\n  meta: PropTypes.array,\r\n  slug: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default SEO;\r\n","import React from 'react';\r\n\r\nimport { rhythm } from '../utils/typography';\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return (\r\n      <footer\r\n        style={{\r\n          marginTop: rhythm(2.5),\r\n          paddingTop: rhythm(1),\r\n        }}\r\n      >\r\n        {/* <div style={{ float: 'right' }}>\r\n          <a href=\"/rss.xml\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            rss\r\n          </a>\r\n        </div> */}\r\n        {/* <a\r\n          href=\"https://mobile.twitter.com/dan_abramov\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          twitter\r\n        </a>{' '}\r\n        &bull;{' '} */}\r\n        {/* <a\r\n          href=\"https://github.com/josegneto\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          \r\n        >\r\n          github\r\n        </a> */}\r\n        {/* <p>Layout from {' '}\r\n        { <a\r\n          href=\"https://overreacted.io\"\r\n          target=\"_blank\"\r\n        >\r\n           overreacted.io\r\n        </a> } by Dan Abramov.</p> */}\r\n        \r\n      </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import { Link, graphql } from 'gatsby';\r\nimport { formatPostDate, formatReadingTime, formatCategories, checkIfSeparation} from '../utils/helpers';\r\n\r\nimport Bio from '../components/Bio';\r\nimport Footer from '../components/Footer';\r\nimport Layout from '../components/Layout';\r\nimport Panel from '../components/Panel';\r\nimport React from 'react';\r\nimport SEO from '../components/SEO';\r\nimport get from 'lodash/get';\r\nimport { rhythm } from '../utils/typography';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nclass BlogIndexTemplate extends React.Component {\r\n  render() {\r\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title');\r\n    const langKey = this.props.pageContext.langKey;\r\n\r\n    const posts = get(this, 'props.data.allMarkdownRemark.edges');\r\n\r\n    return (\r\n      <Layout location={this.props.location} title={siteTitle}>\r\n        <SEO />\r\n        <aside>\r\n          <Bio />\r\n        </aside>\r\n        <main>\r\n          {langKey !== 'en' && langKey !== 'ru' && (\r\n            <Panel>\r\n              These articles have been{' '}\r\n              <a\r\n                href=\"https://github.com/gaearon/overreacted.io#contributing-translations\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                translated by the community\r\n              </a>\r\n              .\r\n            </Panel>\r\n          )}\r\n\r\n          {posts.map(({ node }) => {\r\n            const title = get(node, 'frontmatter.title') || node.fields.slug;\r\n            return (\r\n              <article key={node.fields.slug}>\r\n                <header>\r\n                  <h3\r\n                    style={{\r\n                      fontFamily: 'Montserrat, sans-serif',\r\n                      fontSize: rhythm(1),\r\n                      marginBottom: rhythm(1 / 4),\r\n                    }}\r\n                  >\r\n                    <Link\r\n                      style={{ boxShadow: 'none' }}\r\n                      to={node.fields.slug}\r\n                      rel=\"bookmark\"\r\n                    >\r\n                      {title}\r\n                    </Link>\r\n                  </h3>\r\n                  <small>\r\n                    {formatPostDate(node.frontmatter.date, langKey)}\r\n                    <div class=\"categories\">\r\n                    {formatCategories(node.frontmatter.categories)}\r\n                    {checkIfSeparation(node.frontmatter.categories,node.frontmatter.languages)}\r\n                    {formatCategories(node.frontmatter.languages)}\r\n                    </div>\r\n                  </small>\r\n                </header>\r\n                <p\r\n                  dangerouslySetInnerHTML={{ __html: node.frontmatter.spoiler }}\r\n                />\r\n              </article>\r\n            );\r\n          })}\r\n        </main>\r\n        <Footer />\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlogIndexTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query($langKey: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      filter: { fields: { langKey: { eq: $langKey } } }\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n            langKey\r\n          }\r\n          timeToRead\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            categories\r\n            languages\r\n            spoiler\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","export function formatReadingTime(minutes) {\r\n  let cups = Math.round(minutes / 5);\r\n  let bowls = 0;\r\n  if (cups > 5) {\r\n    return `${new Array(Math.round(cups / Math.E))\r\n      .fill('🍱')\r\n      .join('')} ${minutes} min read`;\r\n  } else {\r\n    return `${new Array(cups || 1).fill('☕️').join('')} ${minutes} min read`;\r\n  }\r\n}\r\n\r\n// `lang` is optional and will default to the current user agent locale\r\nexport function formatPostDate(date, lang) {\r\n  if (typeof Date.prototype.toLocaleDateString !== 'function') {\r\n    return date;\r\n  }\r\n\r\n  date = new Date(date);\r\n  const args = [\r\n    lang,\r\n    { day: 'numeric', month: 'long', year: 'numeric' },\r\n  ].filter(Boolean);\r\n  return date.toLocaleDateString(...args);\r\n}\r\n\r\nexport function formatCategories(categories) {\r\n  if (categories != null){\r\n    const arraynew = [];\r\n    let text = \"\";\r\n    for (let i = 0; i < Object.keys(categories).length; i++) {\r\n      text = categories[i];\r\n      if (i > 0){\r\n        text = \", \" + categories[i];\r\n      }\r\n      arraynew[i] = text;\r\n    }\r\n    return arraynew;\r\n  }\r\n  return categories;\r\n\r\n}\r\n\r\nexport function checkIfSeparation(categories, languages) {\r\n  if (categories != null && languages != null){\r\n      return \" | \"\r\n    }\r\n  return \"\";\r\n}\r\n"],"names":["Bio","render","style","display","marginBottom","rhythm","src","profilePic","alt","marginRight","width","height","borderRadius","maxWidth","href","textDecoration","target","rel","React","children","fontSize","border","padding","background","wordBreak","SEO","meta","image","title","description","slug","lang","StaticQuery","query","data","siteMetadata","site","metaDescription","metaImage","siteUrl","url","htmlAttributes","titleTemplate","name","content","property","concat","defaultProps","Footer","marginTop","paddingTop","BlogIndexTemplate","siteTitle","get","this","langKey","props","pageContext","posts","Layout","location","Panel","map","node","fields","key","fontFamily","Link","boxShadow","to","formatPostDate","frontmatter","date","class","formatCategories","categories","checkIfSeparation","languages","dangerouslySetInnerHTML","__html","spoiler","Date","prototype","toLocaleDateString","args","day","month","year","filter","Boolean","arraynew","text","i","Object","keys","length"],"sourceRoot":""}